@page "/table"

<h3>Table</h3>

<div class="container">
    <div class="col-md-12">
        <input type="text" placeholder="Search by First Name" @bind="searchQuery" @oninput="OnSearchQueryChanged" />
        <table class="table table-hover">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">First</th>
                    <th scope="col">Last</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var person in FilteredPeople)
                {
                    <tr>
                        <th scope="row">@person.Id</th>
                        <td>@person.FirstName</td>
                        <td>@person.LastName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    public class Person
    {
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
    }

    private List<Person> people;
    private List<Person> filteredPeople;
    private string searchQuery = string.Empty;

    protected override void OnInitialized()
    {
        string jsonData = @"
        [
            { ""Id"": 1, ""FirstName"": ""Mark"", ""LastName"": ""Otto"" },
            { ""Id"": 2, ""FirstName"": ""Jacob"", ""LastName"": ""Thornton"" },
            { ""Id"": 3, ""FirstName"": ""Larry"", ""LastName"": ""Bird"" }
        ]";

        people = System.Text.Json.JsonSerializer.Deserialize<List<Person>>(jsonData);
        filteredPeople = people;
    }

    private string SearchQuery
    {
        get => searchQuery;
        set
        {
            if (searchQuery != value)
            {
                searchQuery = value;
                FilterPeople();
                StateHasChanged(); // Notify the UI of the change
            }
        }
    }

    private List<Person> FilteredPeople
    {
        get => filteredPeople;
    }

    private void FilterPeople()
    {
        filteredPeople = people.Where(p => p.FirstName.Contains(searchQuery, StringComparison.OrdinalIgnoreCase)).ToList();
    }

    private void OnSearchQueryChanged(ChangeEventArgs e)
    {
        SearchQuery = e.Value.ToString();
    }
}
